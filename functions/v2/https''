import { onCall, HttpsError, CallableRequest } from "firebase-functions/v2/https";
import * as admin from "firebase-admin";

if (!admin.apps.length) {
  admin.initializeApp();
}

const auth = admin.auth();
const db = admin.firestore();

export const createUserWithRole = onCall(
  async (request: CallableRequest<any>) => {
    if (
      !request.auth?.token?.role ||
      !["admin", "superadmin"].includes(request.auth.token.role as string)
    ) {
      throw new HttpsError("permission-denied", "Only admins can create users.");
    }

    const { email, password, name, role, status } = request.data;

    if (!email || !role) {
      throw new HttpsError("invalid-argument", "Email and role are required.");
    }

    try {
      const userRecord = await auth.createUser({
        email,
        password: password || "TempPass123!",
        displayName: name || email.split("@")[0],
      });

      await auth.setCustomUserClaims(userRecord.uid, { role });

      await db.collection("users").doc(userRecord.uid).set({
        uid: userRecord.uid,
        name: name || userRecord.displayName,
        email,
        role,
        status: status || "active",
        createdAt: admin.firestore.FieldValue.serverTimestamp(),
      });

      return { success: true, uid: userRecord.uid };
    } catch (error: any) {
      console.error("Error creating user:", error);
      throw new HttpsError("internal", error.message || "Failed to create user");
    }
  }
);
